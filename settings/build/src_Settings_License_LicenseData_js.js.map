{"version":3,"file":"src_Settings_License_LicenseData_js.js","mappings":";;;;;;;;;;;;;;;AAA+B;AACc;AAC7C,MAAME,cAAc,GAAGF,+CAAM,CAAC,CAAEG,GAAG,EAAEC,GAAG,MAAO;EAC3CC,aAAa,EAAEC,cAAc,CAACD,aAAa;EAC9CE,UAAU,EAAC,KAAK;EAChBC,cAAc,EAAE,EAAE;EAClBC,aAAa,EAAE,KAAK;EACpBC,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC9B,MAAM;MAACL,aAAa;MAAEM;IAAO,CAAC,GAAG,MAAMV,gDAAkB,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAACY,IAAI,CAAIC,QAAQ,IAAM;MACtG,OAAOA,QAAQ;IAChB,CAAC,CAAC;IACFX,GAAG,CAACY,KAAK,KAAK;MAAEN,aAAa,EAAC,IAAI;MAACD,cAAc,EAACG,OAAO;MAAEN,aAAa,EAACA;IAAa,CAAC,CAAC,CAAC;EAC1F,CAAC;EACDW,eAAe,EAAE,MAAOC,OAAO,IAAK;IACnC,IAAIC,IAAI,GAAG,CAAC,CAAC;IACbA,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtBd,GAAG,CAAC;MAACI,UAAU,EAAC;IAAI,CAAC,CAAC;IACtB,MAAM;MAACF,aAAa;MAAEM;IAAO,CAAC,GAAG,MAAMV,gDAAkB,CAAC,kBAAkB,EAAEiB,IAAI,CAAC;IACnFf,GAAG,CAACY,KAAK,KAAK;MAACR,UAAU,EAAC,KAAK;MAACC,cAAc,EAACG,OAAO;MAAEN,aAAa,EAACA;IAAa,CAAC,CAAC,CAAC;EACvF,CAAC;EACDc,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC9BhB,GAAG,CAAC;MAACI,UAAU,EAAC;IAAI,CAAC,CAAC;IACtB,MAAM;MAACF,aAAa;MAAEM;IAAO,CAAC,GAAG,MAAMV,gDAAkB,CAAC,oBAAoB,CAAC;IAC/EE,GAAG,CAACY,KAAK,KAAK;MAACR,UAAU,EAAC,KAAK;MAACC,cAAc,EAACG,OAAO;MAAEN,aAAa,EAACA;IAAa,CAAC,CAAC,CAAC;EACvF;AAED,CAAC,CAAC,CAAC;AAEH,iEAAeH,cAAc","sources":["webpack://complianz-gdpr/./src/Settings/License/LicenseData.js"],"sourcesContent":["import {create} from 'zustand';\nimport * as cmplz_api from \"../../utils/api\";\nconst UseLicenseData = create(( set, get ) => ({\n    licenseStatus: cmplz_settings.licenseStatus,\n\tprocessing:false,\n\tlicenseNotices: [],\n\tnoticesLoaded: false,\n\tgetLicenseNotices: async () => {\n\t\tconst {licenseStatus, notices} = await cmplz_api.doAction('license_notices', {}).then( ( response ) => {\n\t\t\treturn response;\n\t\t});\n\t\tset(state => ({ noticesLoaded:true,licenseNotices:notices, licenseStatus:licenseStatus}));\n\t},\n\tactivateLicense: async (license) => {\n\t\tlet data = {};\n\t\tdata.license = license;\n\t\tset({processing:true})\n\t\tconst {licenseStatus, notices} = await cmplz_api.doAction('activate_license', data);\n\t\tset(state => ({processing:false,licenseNotices:notices, licenseStatus:licenseStatus}));\n\t},\n\tdeactivateLicense: async () => {\n\t\tset({processing:true})\n\t\tconst {licenseStatus, notices} = await cmplz_api.doAction('deactivate_license');\n\t\tset(state => ({processing:false,licenseNotices:notices, licenseStatus:licenseStatus}));\n\t}\n\n}));\n\nexport default UseLicenseData;\n\n"],"names":["create","cmplz_api","UseLicenseData","set","get","licenseStatus","cmplz_settings","processing","licenseNotices","noticesLoaded","getLicenseNotices","notices","doAction","then","response","state","activateLicense","license","data","deactivateLicense"],"sourceRoot":""}