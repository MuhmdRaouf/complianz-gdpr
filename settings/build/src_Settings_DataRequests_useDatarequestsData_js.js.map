{"version":3,"file":"src_Settings_DataRequests_useDatarequestsData_js.js","mappings":"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","sources":["webpack://complianz-gdpr/./src/Settings/DataRequests/useDatarequestsData.js"],"sourcesContent":["import {create} from 'zustand';\nimport * as cmplz_api from \"../../utils/api\";\nimport produce from \"immer\";\nconst useDatarequestsData = create(( set, get ) => ({\n\trecordsLoaded: false,\n\tsearchValue: '',\n\tsetSearchValue: (value) => set({searchValue: value}),\n\tfetching:false,\n\tgenerating:false,\n\tprogress:false,\n\trecords: [],\n\ttotalRecords:0,\n\ttotalOpen:0,\n\texportLink: '',\n\tnoData:false,\n\tdeleteRecords: async (ids) => {\n\t\t//get array of records to delete\n\t\tlet deleteRecords = get().records.filter(record => ids.includes(record.ID));\n\t\t//remove the ids from the records array\n\t\tset((state) => ({\n\t\t\trecords: state.records.filter(record => !ids.includes(record.ID)),\n\t\t}));\n\t\tlet data = {};\n\t\tdata.records = deleteRecords;\n\t\tawait cmplz_api.doAction('delete_datarequests', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t},\n\tresolveRecords: async (ids) => {\n\t\t//get array of records to resolve\n\t\tset(\n\t\t\tproduce((state) => {\n\t\t\t\tstate.records.forEach(function(record, i) {\n\t\t\t\t\tif (ids.includes(record.ID) ){\n\t\t\t\t\t\tstate.records[i].resolved = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t)\n\t\tlet data = {};\n\t\tdata.records = get().records.filter(record => ids.includes(record.ID));\n\t\tawait cmplz_api.doAction('resolve_datarequests', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t},\n\tfetchData: async (perPage, page, orderBy, order ) => {\n\t\tif (get().fetching) return;\n\t\tset({fetching:true});\n\t\tlet data = {}\n\t\tdata.per_page = perPage;\n\t\tdata.page = page;\n\t\tdata.order = order.toUpperCase();\n\t\tdata.orderBy = orderBy;\n\t\tdata.search = get().searchValue;\n\t\tconst { records, totalRecords, totalOpen} = await cmplz_api.doAction('get_datarequests', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\n\t\tset(() => ({\n\t\t\trecordsLoaded: true,\n\t\t\trecords: records,\n\t\t\ttotalRecords: totalRecords,\n\t\t\ttotalOpen:totalOpen,\n\t\t\tfetching:false,\n\t\t}));\n\t},\n\tstartExport: async () => {\n\t\tset({\n\t\t\tgenerating: true,\n\t\t\tprogress:0,\n\t\t\texportLink: '',\n\t\t})\n\t},\n\tfetchExportDatarequestsProgress: async (statusOnly, startDate, endDate) => {\n\t\tstatusOnly = typeof statusOnly !== 'undefined' ? statusOnly : false;\n\t\tif (!statusOnly) {\n\t\t\tset({ generating:true });\n\t\t}\n\n\t\tlet data = {};\n\t\tdata.startDate = startDate;\n\t\tdata.endDate = endDate;\n\t\tdata.statusOnly = statusOnly;\n\t\tconst {progress, exportLink, noData} = await cmplz_api.doAction('export_datarequests', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tlet generating = false;\n\t\tif (progress<100 ){\n\t\t\tgenerating = true;\n\t\t}\n\t\tset({progress:progress, exportLink:exportLink, generating:generating, noData:noData});\n\n\t},\n}));\n\nexport default useDatarequestsData;\n"],"names":["create","cmplz_api","produce","useDatarequestsData","set","get","recordsLoaded","searchValue","setSearchValue","value","fetching","generating","progress","records","totalRecords","totalOpen","exportLink","noData","deleteRecords","ids","filter","record","includes","ID","state","data","doAction","then","response","catch","error","console","resolveRecords","forEach","i","resolved","fetchData","perPage","page","orderBy","order","per_page","toUpperCase","search","startExport","fetchExportDatarequestsProgress","statusOnly","startDate","endDate"],"sourceRoot":""}