{"version":3,"file":"src_Settings_Inputs_TextSwitchInput_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAsF;AAC4F;AAC1F;AACD;AACC;AACmB;AAC5B;AACZ;AACK;;;;;;;;;;;AAWxE;AACA;AACA;AACA,+FAA+F,2EAAyB;AACxH;AACA,gEAAgE,iDAAiB;AACjF,YAAY,wNAAwN;AACpO,gCAAgC,+CAAe;AAC/C,yBAAyB,6EAAsB;AAC/C;AACA,6CAA6C,6CAAa,SAAS;AACnE;AACA,0CAA0C,4FAA2B;AACrE;AACA;AACA;AACA,KAAK;AACL,yBAAyB,oDAAoB;AAC7C;AACA;AACA;AACA,KAAK,gBAAgB,oDAAoB,CAAC,uEAAuB,EAAE,8EAAoC;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,yEAA2B;AAC5C;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,mCAAmC,oDAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,gEAAgE,iDAAiB;AACjF,YAAY,+CAA+C;AAC3D;AACA,yBAAyB,oDAAoB,CAAC,qEAAqB,EAAE,8EAAoC;AACzG;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,YAAY,gFAAgF;AAC5F,gBAAgB,6CAAa;AAC7B,wBAAwB,yEAAkB;AAC1C,wBAAwB,iEAAc,WAAW;AACjD,IAAI,gDAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB,oDAAoB,UAAU,8EAAoC;AAC3F;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;AAK8R;AAC9R;;;;;;;;;;;;;;;;;AC/IyE;;;AAGzE;AACA,gBAAgB,6CAAa;AAC7B;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","sources":["webpack://complianz-gdpr/./node_modules/@radix-ui/react-switch/dist/index.module.js","webpack://complianz-gdpr/./node_modules/@radix-ui/react-use-previous/dist/index.module.js","webpack://complianz-gdpr/./src/Settings/Inputs/SwitchInput.js","webpack://complianz-gdpr/./src/Settings/Inputs/TextInput.js","webpack://complianz-gdpr/./src/Settings/Inputs/TextSwitchInput.js","webpack://complianz-gdpr/./src/Settings/Inputs/Input.scss?1cff","webpack://complianz-gdpr/./src/Settings/Inputs/SwitchInput.scss?0826","webpack://complianz-gdpr/./src/Settings/Inputs/TextSwitchInput.scss?7352"],"sourcesContent":["import $irPIl$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport {forwardRef as $irPIl$forwardRef, useState as $irPIl$useState, useRef as $irPIl$useRef, createElement as $irPIl$createElement, useEffect as $irPIl$useEffect} from \"react\";\nimport {composeEventHandlers as $irPIl$composeEventHandlers} from \"@radix-ui/primitive\";\nimport {useComposedRefs as $irPIl$useComposedRefs} from \"@radix-ui/react-compose-refs\";\nimport {createContextScope as $irPIl$createContextScope} from \"@radix-ui/react-context\";\nimport {useControllableState as $irPIl$useControllableState} from \"@radix-ui/react-use-controllable-state\";\nimport {usePrevious as $irPIl$usePrevious} from \"@radix-ui/react-use-previous\";\nimport {useSize as $irPIl$useSize} from \"@radix-ui/react-use-size\";\nimport {Primitive as $irPIl$Primitive} from \"@radix-ui/react-primitive\";\n\n\n\n\n\n\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * Switch\n * -----------------------------------------------------------------------------------------------*/ const $6be4966fd9bbc698$var$SWITCH_NAME = 'Switch';\nconst [$6be4966fd9bbc698$var$createSwitchContext, $6be4966fd9bbc698$export$cf7f5f17f69cbd43] = $irPIl$createContextScope($6be4966fd9bbc698$var$SWITCH_NAME);\nconst [$6be4966fd9bbc698$var$SwitchProvider, $6be4966fd9bbc698$var$useSwitchContext] = $6be4966fd9bbc698$var$createSwitchContext($6be4966fd9bbc698$var$SWITCH_NAME);\nconst $6be4966fd9bbc698$export$b5d5cf8927ab7262 = /*#__PURE__*/ $irPIl$forwardRef((props, forwardedRef)=>{\n    const { __scopeSwitch: __scopeSwitch , name: name , checked: checkedProp , defaultChecked: defaultChecked , required: required , disabled: disabled , value: value = 'on' , onCheckedChange: onCheckedChange , ...switchProps } = props;\n    const [button, setButton] = $irPIl$useState(null);\n    const composedRefs = $irPIl$useComposedRefs(forwardedRef, (node)=>setButton(node)\n    );\n    const hasConsumerStoppedPropagationRef = $irPIl$useRef(false); // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n    const [checked = false, setChecked] = $irPIl$useControllableState({\n        prop: checkedProp,\n        defaultProp: defaultChecked,\n        onChange: onCheckedChange\n    });\n    return /*#__PURE__*/ $irPIl$createElement($6be4966fd9bbc698$var$SwitchProvider, {\n        scope: __scopeSwitch,\n        checked: checked,\n        disabled: disabled\n    }, /*#__PURE__*/ $irPIl$createElement($irPIl$Primitive.button, $irPIl$babelruntimehelpersesmextends({\n        type: \"button\",\n        role: \"switch\",\n        \"aria-checked\": checked,\n        \"aria-required\": required,\n        \"data-state\": $6be4966fd9bbc698$var$getState(checked),\n        \"data-disabled\": disabled ? '' : undefined,\n        disabled: disabled,\n        value: value\n    }, switchProps, {\n        ref: composedRefs,\n        onClick: $irPIl$composeEventHandlers(props.onClick, (event)=>{\n            setChecked((prevChecked)=>!prevChecked\n            );\n            if (isFormControl) {\n                hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(); // if switch is in a form, stop propagation from the button so that we only propagate\n                // one click event (from the input). We propagate changes from an input so that native\n                // form validation works and form events reflect switch updates.\n                if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n        })\n    })), isFormControl && /*#__PURE__*/ $irPIl$createElement($6be4966fd9bbc698$var$BubbleInput, {\n        control: button,\n        bubbles: !hasConsumerStoppedPropagationRef.current,\n        name: name,\n        value: value,\n        checked: checked,\n        required: required,\n        disabled: disabled // We transform because the input is absolutely positioned but we have\n        ,\n        style: {\n            transform: 'translateX(-100%)'\n        }\n    }));\n});\n/*#__PURE__*/ Object.assign($6be4966fd9bbc698$export$b5d5cf8927ab7262, {\n    displayName: $6be4966fd9bbc698$var$SWITCH_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SwitchThumb\n * -----------------------------------------------------------------------------------------------*/ const $6be4966fd9bbc698$var$THUMB_NAME = 'SwitchThumb';\nconst $6be4966fd9bbc698$export$4d07bf653ea69106 = /*#__PURE__*/ $irPIl$forwardRef((props, forwardedRef)=>{\n    const { __scopeSwitch: __scopeSwitch , ...thumbProps } = props;\n    const context = $6be4966fd9bbc698$var$useSwitchContext($6be4966fd9bbc698$var$THUMB_NAME, __scopeSwitch);\n    return /*#__PURE__*/ $irPIl$createElement($irPIl$Primitive.span, $irPIl$babelruntimehelpersesmextends({\n        \"data-state\": $6be4966fd9bbc698$var$getState(context.checked),\n        \"data-disabled\": context.disabled ? '' : undefined\n    }, thumbProps, {\n        ref: forwardedRef\n    }));\n});\n/*#__PURE__*/ Object.assign($6be4966fd9bbc698$export$4d07bf653ea69106, {\n    displayName: $6be4966fd9bbc698$var$THUMB_NAME\n});\n/* ---------------------------------------------------------------------------------------------- */ const $6be4966fd9bbc698$var$BubbleInput = (props)=>{\n    const { control: control , checked: checked , bubbles: bubbles = true , ...inputProps } = props;\n    const ref = $irPIl$useRef(null);\n    const prevChecked = $irPIl$usePrevious(checked);\n    const controlSize = $irPIl$useSize(control); // Bubble checked change to parents (e.g form change event)\n    $irPIl$useEffect(()=>{\n        const input = ref.current;\n        const inputProto = window.HTMLInputElement.prototype;\n        const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked');\n        const setChecked = descriptor.set;\n        if (prevChecked !== checked && setChecked) {\n            const event = new Event('click', {\n                bubbles: bubbles\n            });\n            setChecked.call(input, checked);\n            input.dispatchEvent(event);\n        }\n    }, [\n        prevChecked,\n        checked,\n        bubbles\n    ]);\n    return /*#__PURE__*/ $irPIl$createElement(\"input\", $irPIl$babelruntimehelpersesmextends({\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked\n    }, inputProps, {\n        tabIndex: -1,\n        ref: ref,\n        style: {\n            ...props.style,\n            ...controlSize,\n            position: 'absolute',\n            pointerEvents: 'none',\n            opacity: 0,\n            margin: 0\n        }\n    }));\n};\nfunction $6be4966fd9bbc698$var$getState(checked) {\n    return checked ? 'checked' : 'unchecked';\n}\nconst $6be4966fd9bbc698$export$be92b6f5f03c0fe9 = $6be4966fd9bbc698$export$b5d5cf8927ab7262;\nconst $6be4966fd9bbc698$export$6521433ed15a34db = $6be4966fd9bbc698$export$4d07bf653ea69106;\n\n\n\n\nexport {$6be4966fd9bbc698$export$cf7f5f17f69cbd43 as createSwitchScope, $6be4966fd9bbc698$export$b5d5cf8927ab7262 as Switch, $6be4966fd9bbc698$export$4d07bf653ea69106 as SwitchThumb, $6be4966fd9bbc698$export$be92b6f5f03c0fe9 as Root, $6be4966fd9bbc698$export$6521433ed15a34db as Thumb};\n//# sourceMappingURL=index.module.js.map\n","import {useRef as $8LvvK$useRef, useMemo as $8LvvK$useMemo} from \"react\";\n\n\nfunction $010c2913dbd2fe3d$export$5cae361ad82dce8b(value) {\n    const ref = $8LvvK$useRef({\n        value: value,\n        previous: value\n    }); // We compare values before making an update to ensure that\n    // a change has been made. This ensures the previous value is\n    // persisted correctly between renders.\n    return $8LvvK$useMemo(()=>{\n        if (ref.current.value !== value) {\n            ref.current.previous = ref.current.value;\n            ref.current.value = value;\n        }\n        return ref.current.previous;\n    }, [\n        value\n    ]);\n}\n\n\n\n\nexport {$010c2913dbd2fe3d$export$5cae361ad82dce8b as usePrevious};\n//# sourceMappingURL=index.module.js.map\n","import {memo} from 'react';\nimport * as Switch from '@radix-ui/react-switch';\nimport './SwitchInput.scss';\n\nconst SwitchInput = ({\n\tvalue,\n\tonChange,\n\trequired,\n\tdisabled,\n}) => {\n\tlet val = value;\n\t//if value is \"0\" or \"1\", convert to boolean\n\t//cookiebanner values can be \"0\" or \"1\", because of the way they're loaded, but the switch needs a boolean\n\tif (value === \"0\" || value === \"1\") {\n\t\tval = value === \"1\";\n\t}\n\n\treturn (\n\t\t<Switch.Root\n\t\t\tclassName=\"cmplz-switch-root\"\n\t\t\tchecked={val}\n\t\t\tonCheckedChange={onChange}\n\t\t\tdisabled={disabled}\n\t\t\trequired={required}\n\t\t>\n\t\t\t<Switch.Thumb className=\"cmplz-switch-thumb\" />\n\t\t</Switch.Root>\n\t);\n};\n\nexport default memo(SwitchInput);\n","import {memo, useEffect, useState} from 'react';\nimport './Input.scss';\n\nconst TextInput = ({\n\tvalue,\n\tonChange,\n\trequired,\n\tdefaultValue,\n\tdisabled,\n\tid,\n\tname,\n\tplaceholder\n}) => {\n\tconst inputId = id || name;\n\tconst [inputValue, setInputValue] = useState('');\n\n\t//ensure that the initial value is set\n\tuseEffect(() => {\n\t\tsetInputValue(value || '');\n\t},[value]);\n\n\t//because an update on the entire Fields array is costly, we only update after the user has stopped typing\n\tuseEffect(() => {\n\t\t// skip first render\n\t\tconst typingTimer = setTimeout(() => {\n\t\t\tonChange(inputValue);\n\t\t}, 500);\n\n\t\treturn () => {\n\t\t\tclearTimeout(typingTimer);\n\t\t};\n\t}, [inputValue]);\n\n\tconst handleChange = ( value ) => {\n\t\tsetInputValue(value);\n\t};\n\n\treturn (\n\t\t<div className=\"cmplz-input-group cmplz-text-input-group\">\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tid={inputId}\n\t\t\t\tname={name}\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(event) => handleChange(event.target.value)}\n\t\t\t\trequired={required}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tclassName=\"cmplz-text-input-group__input\"\n\t\t\t\tplaceholder={placeholder}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default memo(TextInput);\n","import TextInput from './TextInput';\nimport SwitchInput from './SwitchInput';\nimport {__} from '@wordpress/i18n';\nimport {memo, useEffect, useState} from 'react';\nimport './TextSwitchInput.scss';\n\nconst TextSwitchInput = ({\n\tlabel,\n\tvalue,\n\tonChange,\n\tplaceholder = ''\n}) => {\n\tconst [textDisabled, setTextDisabled] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (value['show']) {\n\t\t\tsetTextDisabled(false);\n\t\t} else {\n\t\t\tsetTextDisabled(true);\n\t\t}\n\t}, [value]);\n\n\tconst onTextChange = (text) => {\n\t\tlet newValue = {...value};\n\t\tnewValue['text'] = text;\n\t\tonChange(newValue);\n\t}\n\n\tconst onSwitchHandler = (switched) => {\n\t\tlet newValue = {...value};\n\t\tnewValue['show'] = switched;\n\t\tonChange(newValue);\n\t}\n\n\treturn (\n\t\t<div className=\"cmplz-text-checkbox-input\">\n\t\t\t<TextInput\n\t\t\t\tvalue={value['text']}\n\t\t\t\tonChange={onTextChange}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tdisabled={textDisabled}\n\t\t\t\t/>\n\t\t\t<SwitchInput\n\t\t\t\tlabel={__('Show', 'complianz-gdpr')}\n\t\t\t\tvalue={value['show']}\n\t\t\t\tonChange={onSwitchHandler}\n\t\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default memo(TextSwitchInput);\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":["memo","Switch","SwitchInput","_ref","value","onChange","required","disabled","val","createElement","Root","className","checked","onCheckedChange","Thumb","useEffect","useState","TextInput","defaultValue","id","name","placeholder","inputId","inputValue","setInputValue","typingTimer","setTimeout","clearTimeout","handleChange","type","event","target","__","TextSwitchInput","label","textDisabled","setTextDisabled","onTextChange","text","newValue","onSwitchHandler","switched"],"sourceRoot":""}