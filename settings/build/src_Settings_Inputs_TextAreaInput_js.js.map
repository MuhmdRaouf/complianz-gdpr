{"version":3,"file":"src_Settings_Inputs_TextAreaInput_js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAwD;AAClC;AACQ;AAE9B,MAAMI,aAAa,GAAGC,IAAA,IAQhB;EAAA,IARiB;IACtBC,KAAK;IACLC,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACXC,QAAQ;IACRC,EAAE;IACFC;EACD,CAAC,GAAAP,IAAA;EACA,MAAMQ,OAAO,GAAGF,EAAE,IAAIC,IAAI;EAC1B,MAAME,WAAW,GAAGZ,6CAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGb,+CAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAF,gDAAS,CAAC,MAAM;IACfe,aAAa,CAACV,KAAK,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;;EAEL;EACAL,gDAAS,CAAC,MAAM;IACf,MAAMgB,WAAW,GAAGC,UAAU,CAAC,MAAM;MACpCX,QAAQ,CAACQ,UAAU,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACZI,YAAY,CAACF,WAAW,CAAC;IAC1B,CAAC;EACF,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,MAAMK,YAAY,GAAKd,KAAK,IAAM;IACjCU,aAAa,CAACV,KAAK,CAAC;EACrB,CAAC;EAED,MAAMe,QAAQ,GAAIC,OAAO,IAAK;IAC7BA,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;IAC7BF,OAAO,CAACC,KAAK,CAACC,MAAM,GAAGF,OAAO,CAACG,YAAY,GAAG,IAAI;EACnD,CAAC;EAEDxB,gDAAS,CAAC,MAAM;IACf,IAAIa,WAAW,CAACY,OAAO,EAAE;MACxBL,QAAQ,CAACP,WAAW,CAACY,OAAO,CAAC;IAC9B;EACD,CAAC,EAAE,CAACpB,KAAK,CAAC,CAAC;EACX,OACCqB,iEAAA;IAAKC,SAAS,EAAC;EAA+C,GAC7DD,iEAAA;IACCE,GAAG,EAAEf,WAAY;IACjBH,EAAE,EAAEE,OAAQ;IACZD,IAAI,EAAEA,IAAK;IACXN,KAAK,EAAES,UAAW;IAClBR,QAAQ,EACPuB,KAAK,IAAK;MACVV,YAAY,CAACU,KAAK,CAACC,MAAM,CAACzB,KAAK,CAAC;IACjC,CAAE;IACFE,QAAQ,EAAEA,QAAS;IACnBC,WAAW,EAAEA,WAAY;IACzBC,QAAQ,EAAEA,QAAS;IACnBkB,SAAS,EAAC;EAAoC,CAC9C,CACG,CAAC;AAER,CAAC;AAED,iEAAe5B,2CAAI,CAACI,aAAa,CAAC;;;;;;;;;;;ACnElC;;;;;;;;;;;;ACAA","sources":["webpack://complianz-gdpr/./src/Settings/Inputs/TextAreaInput.js","webpack://complianz-gdpr/./src/Settings/Inputs/Input.scss?1cff","webpack://complianz-gdpr/./src/Settings/Inputs/TextAreaInput.scss?5522"],"sourcesContent":["import {memo, useEffect, useRef, useState} from 'react';\nimport './Input.scss';\nimport './TextAreaInput.scss';\n\nconst TextAreaInput = ({\n\tvalue,\n\tonChange,\n\trequired,\n\tplaceholder,\n\tdisabled,\n\tid,\n\tname,\n}) => {\n\tconst inputId = id || name;\n\tconst textareaRef = useRef(null);\n\tconst [inputValue, setInputValue] = useState('');\n\n\t//ensure that the initial value is set\n\tuseEffect(() => {\n\t\tsetInputValue(value);\n\t},[]);\n\n\t//because an update on the entire Fields array is costly, we only update after the user has stopped typing\n\tuseEffect(() => {\n\t\tconst typingTimer = setTimeout(() => {\n\t\t\tonChange(inputValue);\n\t\t}, 500);\n\n\t\treturn () => {\n\t\t\tclearTimeout(typingTimer);\n\t\t};\n\t}, [inputValue]);\n\n\tconst handleChange = ( value ) => {\n\t\tsetInputValue(value);\n\t};\n\n\tconst autoGrow = (element) => {\n\t\telement.style.height = 'auto';\n\t\telement.style.height = element.scrollHeight + 'px';\n\t};\n\n\tuseEffect(() => {\n\t\tif (textareaRef.current) {\n\t\t\tautoGrow(textareaRef.current);\n\t\t}\n\t}, [value]);\n\treturn (\n\t\t<div className=\"cmplz-input-group cmplz-text-area-input-group\">\n\t\t\t<textarea\n\t\t\t\tref={textareaRef}\n\t\t\t\tid={inputId}\n\t\t\t\tname={name}\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={\n\t\t\t\t(event) => {\n\t\t\t\t\thandleChange(event.target.value);\n\t\t\t\t}}\n\t\t\t\trequired={required}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tclassName=\"cmplz-text-area-input-group__input\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default memo(TextAreaInput);\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":["memo","useEffect","useRef","useState","TextAreaInput","_ref","value","onChange","required","placeholder","disabled","id","name","inputId","textareaRef","inputValue","setInputValue","typingTimer","setTimeout","clearTimeout","handleChange","autoGrow","element","style","height","scrollHeight","current","createElement","className","ref","event","target"],"sourceRoot":""}