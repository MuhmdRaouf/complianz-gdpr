{"version":3,"file":"src_Settings_ColorPicker_ColorPickerControl_js.js","mappings":"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","sources":["webpack://complianz-gdpr/./src/Settings/ColorPicker/ColorPickerControl.js","webpack://complianz-gdpr/./src/Settings/Inputs/ColorPicker.js","webpack://complianz-gdpr/./src/Settings/ColorPicker/ColorPicker.scss?1d15"],"sourcesContent":["import {useState, useEffect, memo} from 'react';\nimport ColorPicker from '../Inputs/ColorPicker';\nimport * as Popover from '@radix-ui/react-popover';\nimport './ColorPicker.scss'\n\nimport useFields from \"../Fields/FieldsData\";\n\nconst ColorPickerElement = (props) => {\n\tconst {updateField, setChangedField} = useFields();\n\t//parse value from field value\n\tconst [anchorEl, setAnchor] = useState();\n\tconst colorValue = props.field.value.hasOwnProperty(props.item.fieldname) ? props.field.value[props.item.fieldname] : props.field.default[props.item.fieldname];\n\tconst colorName = props.item.fieldname;\n\n\tconst handleClick = (e) => {\n\t\tsetAnchor(e.currentTarget);\n\t}\n\tconst handleClose = (e) => {\n\t\tsetAnchor(null);\n\t}\n\n\tconst handleColorChange = (color, event) => {\n\t\tlet valueCopy = {...props.field.value};\n\t\tvalueCopy[props.item.fieldname] = color.hex;\n\t\tupdateField(props.field.id, valueCopy);\n\t\tsetChangedField(props.field.id, valueCopy);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Popover.Root>\n\t\t\t\t<Popover.Trigger >\n\t\t\t\t\t<div className=\"cmplz-color-picker-control-item\" onClick={handleClick} >\n\t\t\t\t\t\t<div className=\"cmplz-color-picker-color\" style={{backgroundColor: colorValue}}></div>\n\t\t\t\t\t\t{colorName}\n\t\t\t\t\t</div>\n\t\t\t\t</Popover.Trigger>\n\t\t\t\t<Popover.Portal>\n\t\t\t\t\t<Popover.Content>\n\t\t\t\t\t\t<ColorPicker colorValue={colorValue} onChangeComplete={handleColorChange} />\n\t\t\t\t\t</Popover.Content>\n\t\t\t\t</Popover.Portal>\n\t\t\t</Popover.Root>\n\t\t</>\n\t)\n}\n\nconst ColorPickerControl = (props) => {\n\n\treturn (\n\t\t\t<div className=\"cmplz-color-picker-control\">\n\t\t\t\t{ props.field.fields.map((item, i) => <ColorPickerElement key={i} item={item} field={props.field} />)}\n\t\t\t</div>\n\t);\n}\nexport default memo(ColorPickerControl)\n","import { ChromePicker } from 'react-color';\nimport {memo, useState} from 'react';\n\nconst ColorPicker = ({colorValue, onChangeComplete}) => {\n\tconst [color, setColor] = useState(colorValue);\n\n\tconst onChange = (color) => {\n\t\tsetColor(color.hex);\n\t}\n\treturn (\n\t\t<ChromePicker\n\t\t\tcolor={color}\n\t\t\tonChange={onChange}\n\t\t\tonChangeComplete={onChangeComplete}\n\t\t\tdisableAlpha={true}\n\t\t/>\n\t)\n}\nexport default memo(ColorPicker)\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["useState","useEffect","memo","ColorPicker","Popover","useFields","ColorPickerElement","props","updateField","setChangedField","anchorEl","setAnchor","colorValue","field","value","hasOwnProperty","item","fieldname","default","colorName","handleClick","e","currentTarget","handleClose","handleColorChange","color","event","valueCopy","hex","id","createElement","Fragment","Root","Trigger","className","onClick","style","backgroundColor","Portal","Content","onChangeComplete","ColorPickerControl","fields","map","i","key","ChromePicker","_ref","setColor","onChange","disableAlpha"],"sourceRoot":""}