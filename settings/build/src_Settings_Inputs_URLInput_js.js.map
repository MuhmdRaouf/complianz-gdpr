{"version":3,"file":"src_Settings_Inputs_URLInput_js.js","mappings":";;;;;;;;;;;;;;;;;;;AAAgD;AAC1B;AAEtB,MAAMG,QAAQ,GAAGC,IAAA,IASX;EAAA,IATY;IACjBC,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,QAAQ;IACRC,YAAY;IACZC,QAAQ;IACRC,EAAE;IACFC;EACD,CAAC,GAAAR,IAAA;EACA,MAAMS,OAAO,GAAGF,EAAE,IAAIC,IAAI;EAC1B,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGb,+CAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMc,UAAU,GAAIC,MAAM,IAAK;IAC9B,IAAIC,GAAG,GAAGD,MAAM,CAACE,KAAK,CAAC,gEAAgE,CAAC;IACxF,OAAQD,GAAG,KAAK,IAAI;EACrB,CAAC;;EAED;EACAjB,gDAAS,CAAC,MAAM;IACfc,aAAa,CAACV,KAAK,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;;EAEL;EACAJ,gDAAS,CAAC,MAAM;IACf,MAAMmB,WAAW,GAAGC,UAAU,CAAC,MAAM;MACpCf,QAAQ,CAACQ,UAAU,CAAC;MACpB,IAAI,CAACE,UAAU,CAACF,UAAU,CAAC,EAAE;QAC5BP,OAAO,CAAC,aAAa,CAAC;MACvB;IACD,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACZe,YAAY,CAACF,WAAW,CAAC;IAC1B,CAAC;EACF,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,MAAMS,YAAY,GAAKlB,KAAK,IAAM;IACjCU,aAAa,CAACV,KAAK,CAAC;EACrB,CAAC;EAED,OACCmB,iEAAA;IAAKC,SAAS,EAAC;EAAyC,GACvDD,iEAAA;IACCE,IAAI,EAAC,KAAK;IACVf,EAAE,EAAEE,OAAQ;IACZD,IAAI,EAAEA,IAAK;IACXP,KAAK,EAAES,UAAW;IAClBR,QAAQ,EAAGqB,KAAK,IAAKJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACvB,KAAK,CAAE;IACtDG,QAAQ,EAAEA,QAAS;IACnBE,QAAQ,EAAEA,QAAS;IACnBe,SAAS,EAAC;EAA8B,CACxC,CACG,CAAC;AAER,CAAC;AAED,iEAAezB,2CAAI,CAACG,QAAQ,CAAC;;;;;;;;;;;AC5D7B","sources":["webpack://complianz-gdpr/./src/Settings/Inputs/URLInput.js","webpack://complianz-gdpr/./src/Settings/Inputs/Input.scss?1cff"],"sourcesContent":["import {memo, useEffect, useState} from 'react';\nimport './Input.scss';\n\nconst URLInput = ({\n\tvalue,\n\tonChange,\n\tonError,\n\trequired,\n\tdefaultValue,\n\tdisabled,\n\tid,\n\tname,\n}) => {\n\tconst inputId = id || name;\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst isValidURL = (string) => {\n\t\tvar res = string.match(/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/);\n\t\treturn (res !== null)\n\t};\n\n\t//ensure that the initial value is set\n\tuseEffect(() => {\n\t\tsetInputValue(value);\n\t},[]);\n\n\t//because an update on the entire Fields array is costly, we only update after the user has stopped typing\n\tuseEffect(() => {\n\t\tconst typingTimer = setTimeout(() => {\n\t\t\tonChange(inputValue);\n\t\t\tif (!isValidURL(inputValue)) {\n\t\t\t\tonError('invalid_url');\n\t\t\t}\n\t\t}, 500);\n\n\t\treturn () => {\n\t\t\tclearTimeout(typingTimer);\n\t\t};\n\t}, [inputValue]);\n\n\tconst handleChange = ( value ) => {\n\t\tsetInputValue(value);\n\t};\n\n\treturn (\n\t\t<div className=\"cmplz-input-group cmplz-url-input-group\">\n\t\t\t<input\n\t\t\t\ttype='url'\n\t\t\t\tid={inputId}\n\t\t\t\tname={name}\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(event) => handleChange(event.target.value)}\n\t\t\t\trequired={required}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tclassName=\"cmplz-url-input-group__input\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default memo(URLInput);\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["memo","useEffect","useState","URLInput","_ref","value","onChange","onError","required","defaultValue","disabled","id","name","inputId","inputValue","setInputValue","isValidURL","string","res","match","typingTimer","setTimeout","clearTimeout","handleChange","createElement","className","type","event","target"],"sourceRoot":""}