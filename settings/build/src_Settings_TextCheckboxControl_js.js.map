{"version":3,"file":"src_Settings_TextCheckboxControl_js.js","mappings":";;;;;;;;;;;;;;;;;;;AAAiE;AAEX;AAEtD,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EACtC,MAAM;IAACC,eAAe;IAAEC;EAAY,CAAC,GAAGJ,uEAAS,CAAC,CAAC;EACnD,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;IACtC,IAAIC,QAAQ,GAAG;MAAC,GAAGL,KAAK,CAACM,KAAK,CAACF;IAAK,CAAC;IACrCC,QAAQ,CAAC,MAAM,CAAC,GAAGD,KAAK;IACxBF,WAAW,CAACF,KAAK,CAACM,KAAK,CAACC,EAAE,EAAEF,QAAQ,CAAC;IACrCJ,eAAe,CAACD,KAAK,CAACM,KAAK,CAACC,EAAE,EAAEF,QAAQ,CAAC;EAC1C,CAAC;EAED,MAAMG,uBAAuB,GAAIJ,KAAK,IAAK;IAC1C,IAAIC,QAAQ,GAAG;MAAC,GAAGL,KAAK,CAACM,KAAK,CAACF;IAAK,CAAC;IACrCC,QAAQ,CAAC,MAAM,CAAC,GAAGD,KAAK;IACxBF,WAAW,CAACF,KAAK,CAACM,KAAK,CAACC,EAAE,EAAEF,QAAQ,CAAC;IACrCJ,eAAe,CAACD,KAAK,CAACM,KAAK,CAACC,EAAE,EAAEF,QAAQ,CAAC;EAC1C,CAAC;EAED,IAAII,SAAS,GAAGT,KAAK,CAACM,KAAK,CAACF,KAAK,CAACM,cAAc,CAAC,MAAM,CAAC,GAAGV,KAAK,CAACM,KAAK,CAACF,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE;EACzF,IAAIO,aAAa,GAAGX,KAAK,CAACM,KAAK,CAACF,KAAK,CAACM,cAAc,CAAC,MAAM,CAAC,GAAGV,KAAK,CAACM,KAAK,CAACF,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK;EAChG,OAECQ,iEAAA;IAAKC,SAAS,EAAC;EAAoB,GACjCb,KAAK,CAACc,KAAK,EACZF,iEAAA;IAAKC,SAAS,EAAC;EAA2B,GACzCD,iEAAA,CAAChB,8DAAW;IACXmB,WAAW,EAAGf,KAAK,CAACM,KAAK,CAACS,WAAa;IACvCC,QAAQ,EAAKC,UAAU,IAAMd,mBAAmB,CAACc,UAAU,CAAG;IAC9Db,KAAK,EAAIK,SAAW;IACpBS,QAAQ,EAAIlB,KAAK,CAACkB;EAAS,CAC3B,CAAC,EACFN,iEAAA,CAACf,gEAAa;IACbqB,QAAQ,EAAIlB,KAAK,CAACkB,QAAS;IAC3BC,OAAO,EAAIR,aAAa,IAAE,CAAG;IAC7BK,QAAQ,EAAKC,UAAU,IAAMT,uBAAuB,CAACS,UAAU;EAAG,CAClE,CACG,CAAC,EACLjB,KAAK,CAACM,KAAK,CAACc,OAAO,IAAIR,iEAAA;IAAKS,uBAAuB,EAAE;MAACC,MAAM,EAACtB,KAAK,CAACM,KAAK,CAACc;IAAO;EAAE,CAAM,CACrF,CAAC;AAIR,CAAC;AAED,iEAAerB,mBAAmB","sources":["webpack://complianz-gdpr/./src/Settings/TextCheckboxControl.js"],"sourcesContent":["import {TextControl, ToggleControl} from \"@wordpress/components\";\n\nimport useFields from \"../Settings/Fields/FieldsData\";\n\nconst TextCheckboxControl = (props) => {\n\tconst {setChangedField, updateField } = useFields();\n\tconst onChangeHandlerText = (value) => {\n\t\tlet curValue = {...props.field.value};\n\t\tcurValue['text'] = value;\n\t\tupdateField(props.field.id, curValue);\n\t\tsetChangedField(props.field.id, curValue);\n\t}\n\n\tconst onChangeHandlerCheckbox = (value) => {\n\t\tlet curValue = {...props.field.value};\n\t\tcurValue['show'] = value;\n\t\tupdateField(props.field.id, curValue);\n\t\tsetChangedField(props.field.id, curValue);\n\t}\n\n\tlet textValue = props.field.value.hasOwnProperty('text') ? props.field.value['text'] : '';\n\tlet checkboxValue = props.field.value.hasOwnProperty('show') ? props.field.value['show'] : false;\n\treturn (\n\n\t\t<div className=\"cmplz-text-control\">\n\t\t\t{props.label}\n\t\t\t<div className=\"cmplz-text-control__field\">\n\t\t\t\t<TextControl\n\t\t\t\t\tplaceholder={ props.field.placeholder }\n\t\t\t\t\tonChange={ ( fieldValue ) => onChangeHandlerText(fieldValue) }\n\t\t\t\t\tvalue= { textValue }\n\t\t\t\t\tdisabled = {props.disabled}\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tdisabled = {props.disabled}\n\t\t\t\t\tchecked= { checkboxValue==1 }\n\t\t\t\t\tonChange={ ( fieldValue ) => onChangeHandlerCheckbox(fieldValue) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{props.field.comment && <div dangerouslySetInnerHTML={{__html:props.field.comment}}></div>}\n\t\t</div>\n\t);\n\n\n}\n\nexport default TextCheckboxControl;\n\n\n"],"names":["TextControl","ToggleControl","useFields","TextCheckboxControl","props","setChangedField","updateField","onChangeHandlerText","value","curValue","field","id","onChangeHandlerCheckbox","textValue","hasOwnProperty","checkboxValue","createElement","className","label","placeholder","onChange","fieldValue","disabled","checked","comment","dangerouslySetInnerHTML","__html"],"sourceRoot":""}