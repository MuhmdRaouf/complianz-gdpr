{"version":3,"file":"src_Settings_ProcessingAgreements_ProcessingAgreementsData_js.js","mappings":"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","sources":["webpack://complianz-gdpr/./src/Settings/ProcessingAgreements/ProcessingAgreementsData.js"],"sourcesContent":["import {create} from 'zustand';\nimport produce from 'immer';\nimport * as cmplz_api from \"../../utils/api\";\nimport {updateFieldsListWithConditions} from \"../../utils/updateFieldsListWithConditions\";\nconst useProcessingAgreementsData = create(( set, get ) => ({\n\tdocumentsLoaded: false,\n\tregion: '',\n\tfileName: '',\n\tserviceName: '',\n\tfetching:false,\n\tupdating:false,\n\tloadingFields:false,\n\tdocuments: [],\n\tregions: [],\n\tfields: [],\n\teditDocumentId:false,\n\tresetEditDocumentId: (id) => {\n\t\tset({editDocumentId:false, region:'', serviceName:''});\n\t},\n\teditDocument: async (e, id) => {\n\t\te.preventDefault();\n\t\tset({updating:true});\n\t\tawait cmplz_api.doAction('load_processing_agreement', {id: id}).then((response) => {\n\t\t\tset({fields:response.fields,region:response.region,serviceName:response.serviceName,updating:false, fileName:response.file_name});\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tset({editDocumentId:id});\n\t},\n\tsetRegion: (region) => {\n\t\tset({region:region});\n\t},\n\tsetServiceName: (serviceName) => {\n\t\tset({serviceName:serviceName});\n\t},\n\tupdateField: (id, value) => {\n\t\tlet found=false;\n\t\tlet index = false;\n\t\tset(\n\t\t\tproduce((state) => {\n\t\t\t\tstate.fields.forEach(function(fieldItem, i) {\n\t\t\t\t\tif (fieldItem.id === id ){\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\tfound=true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (index!==false) state.fields[index].value = value;\n\t\t\t})\n\t\t)\n\t\tlet newFields = updateFieldsListWithConditions(get().fields);\n\t\tset({fields:newFields});\n\t},\n\tsave: async ( region, serviceName ) => {\n\t\tset({updating:true});\n\t\tlet postId = get().editDocumentId;\n\t\tawait cmplz_api.doAction('save_processing_agreement', {fields: get().fields, region: region, serviceName: serviceName, post_id:postId}).then((response) => {\n\t\t\tset({updating:false});\n\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tget().fetchData();\n\t},\n\tdeleteDocuments: async ( ids ) => {\n\t\t//get array of documents to delete\n\t\tlet deleteDocuments = get().documents.filter(document => ids.includes(document.id));\n\t\t//remove the ids from the documents array\n\t\tset((state) => ({\n\t\t\tdocuments: state.documents.filter(document => !ids.includes(document.id)),\n\t\t}));\n\t\tlet data = {};\n\t\tdata.documents = deleteDocuments;\n\t\tawait cmplz_api.doAction('delete_processing_agreement', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t},\n\tfetchData: async ( ) => {\n\t\tif (get().fetching) return;\n\t\tset({fetching:true});\n\t\tlet data = {}\n\t\tconst { documents,regions } = await cmplz_api.doAction('get_processing_agreements', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tset(() => ({\n\t\t\tdocumentsLoaded: true,\n\t\t\tdocuments: documents,\n\t\t\tregions: regions,\n\t\t\tfetching:false,\n\t\t}));\n\t},\n\tfetchFields: async ( region ) => {\n\t\tlet data = {region:region}\n\t\tset({loadingFields:true});\n\t\tconst { fields } = await cmplz_api.doAction('get_processing_agreement_fields', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tlet newFields = updateFieldsListWithConditions(fields);\n\n\t\tset((state) => ({\n\t\t\tfields: newFields,\n\t\t\tloadingFields:false,\n\t\t}));\n\t},\n}));\n\nexport default useProcessingAgreementsData;\n"],"names":["create","produce","cmplz_api","updateFieldsListWithConditions","useProcessingAgreementsData","set","get","documentsLoaded","region","fileName","serviceName","fetching","updating","loadingFields","documents","regions","fields","editDocumentId","resetEditDocumentId","id","editDocument","e","preventDefault","doAction","then","response","file_name","catch","error","console","setRegion","setServiceName","updateField","value","found","index","state","forEach","fieldItem","i","newFields","save","postId","post_id","fetchData","deleteDocuments","ids","filter","document","includes","data","fetchFields"],"sourceRoot":""}