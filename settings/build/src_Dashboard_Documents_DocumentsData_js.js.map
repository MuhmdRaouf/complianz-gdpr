{"version":3,"file":"src_Dashboard_Documents_DocumentsData_js.js","mappings":";;;;;;;;;;;;;;;AAA+B;AACc;AAE7C,MAAME,YAAY,GAAGF,+CAAM,CAAC,CAAEG,GAAG,EAAEC,GAAG,MAAO;EAC5CC,SAAS,EAAC,EAAE;EACZC,kBAAkB,EAAC,KAAK;EACxBC,0BAA0B,EAAC,EAAE;EAC7BC,qBAAqB,EAAC,EAAE;EACxBC,iBAAiB,EAAC,EAAE;EACpBC,MAAM,EAAC,EAAE;EACTC,SAAS,EAAGD,MAAM,IAAK;IACtB,IAAI,OAAQE,OAAQ,KAAK,WAAW,EAAG;MACtCC,cAAc,CAACC,mBAAmB,GAAGJ,MAAM;IAC5C;IACAP,GAAG,CAACY,KAAK,KAAK;MAAEL,MAAM,EAACA;IAAM,CAAC,CAAC,CAAC;EACjC,CAAC;EACDM,SAAS,EAAEA,CAAA,KAAM;IAChB,IAAIN,MAAM,GAAG,KAAK;IAClB,IAAI,OAAQE,OAAQ,KAAK,WAAW,EAAC;MACpC,IAAIC,cAAc,CAACC,mBAAmB,EAAE;QACvCJ,MAAM,GAAGG,cAAc,CAACC,mBAAmB;MAC5C;IACD;IACAX,GAAG,CAACY,KAAK,KAAK;MAAEL,MAAM,EAACA;IAAM,CAAC,CAAC,CAAC;EACjC,CAAC;EACDO,YAAY,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAM;MAACZ,SAAS;MAAEE,0BAA0B;MAAEC,qBAAqB;MAACC;IAAiB,CAAC,GAAG,MAAMR,gDAAkB,CAAC,sBAAsB,CAAC,CAACkB,IAAI,CAAIC,QAAQ,IAAM;MAC/J,OAAOA,QAAQ;IAChB,CAAC,CAAC;IACFjB,GAAG,CAACY,KAAK,KAAK;MAAET,kBAAkB,EAAC,IAAI;MAACD,SAAS,EAACA,SAAS;MAAEE,0BAA0B,EAACA,0BAA0B;MAAEC,qBAAqB,EAACA,qBAAqB;MAACC,iBAAiB,EAACA;IAAiB,CAAC,CAAC,CAAC;EACvM;AAED,CAAC,CAAC,CAAC;AAEH,iEAAeP,YAAY","sources":["webpack://complianz-gdpr/./src/Dashboard/Documents/DocumentsData.js"],"sourcesContent":["import {create} from 'zustand';\nimport * as cmplz_api from \"../../utils/api\";\n\nconst useDocuments = create(( set, get ) => ({\n\tdocuments:[],\n\tdocumentDataLoaded:false,\n\tprocessingAgreementOptions:[],\n\tproofOfConsentOptions:[],\n\tdataBreachOptions:[],\n\tregion:'',\n\tsetRegion: (region) => {\n\t\tif (typeof (Storage) !== \"undefined\" ) {\n\t\t\tsessionStorage.cmplzSelectedRegion = region;\n\t\t}\n\t\tset(state => ({ region:region}));\n\t},\n\tgetRegion: () => {\n\t\tlet region = 'all';\n\t\tif (typeof (Storage) !== \"undefined\"){\n\t\t\tif (sessionStorage.cmplzSelectedRegion) {\n\t\t\t\tregion = sessionStorage.cmplzSelectedRegion;\n\t\t\t}\n\t\t}\n\t\tset(state => ({ region:region}));\n\t},\n\tgetDocuments: async () => {\n\t\tconst {documents, processingAgreementOptions, proofOfConsentOptions,dataBreachOptions} = await cmplz_api.doAction('documents_block_data').then( ( response ) => {\n\t\t\treturn response;\n\t\t});\n\t\tset(state => ({ documentDataLoaded:true,documents:documents, processingAgreementOptions:processingAgreementOptions, proofOfConsentOptions:proofOfConsentOptions,dataBreachOptions:dataBreachOptions}));\n\t},\n\n}));\n\nexport default useDocuments;\n\n"],"names":["create","cmplz_api","useDocuments","set","get","documents","documentDataLoaded","processingAgreementOptions","proofOfConsentOptions","dataBreachOptions","region","setRegion","Storage","sessionStorage","cmplzSelectedRegion","state","getRegion","getDocuments","doAction","then","response"],"sourceRoot":""}