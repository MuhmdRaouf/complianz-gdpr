{"version":3,"file":"src_Settings_RecordsOfConsent_useRecordsOfConsentData_js.js","mappings":"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","sources":["webpack://complianz-gdpr/./src/Settings/RecordsOfConsent/useRecordsOfConsentData.js"],"sourcesContent":["import {create} from 'zustand';\nimport * as cmplz_api from \"../../utils/api\";\nconst useRecordsOfConsentData = create(( set, get ) => ({\n\trecordsLoaded: false,\n\tfetching:false,\n\tgenerating:false,\n\tprogress:false,\n\trecords: [],\n\texportLink: '',\n\tdownloadUrl: '',\n\tregions: [],\n\tfields: [],\n\tnoData:false,\n\tdeleteRecords: async (ids) => {\n\t\t//get array of records to delete\n\t\tlet deleteRecords = get().records.filter(record => ids.includes(record.id));\n\t\t//remove the ids from the records array\n\t\tset((state) => ({\n\t\t\trecords: state.records.filter(record => !ids.includes(record.id)),\n\t\t}));\n\t\tlet data = {};\n\t\tdata.records = deleteRecords;\n\t\tawait cmplz_api.doAction('delete_records_of_consent', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t},\n\tfetchData: async ( ) => {\n\t\tif (get().fetching) return;\n\t\tset({fetching:true});\n\t\tlet data = {}\n\t\tconst { records, regions, download_url} = await cmplz_api.doAction('get_records_of_consent', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tset(() => ({\n\t\t\trecordsLoaded: true,\n\t\t\trecords: records,\n\t\t\tregions: regions,\n\t\t\tdownloadUrl: download_url,\n\t\t\tfetching:false,\n\t\t}));\n\t},\n\tstartExport: async () => {\n\t\tset({\n\t\t\tgenerating: true,\n\t\t\tprogress:0,\n\t\t\texportLink: '',\n\t\t})\n\t},\n\tfetchExportRecordsOfConsentProgress: async (statusOnly, startDate, endDate) => {\n\t\tstatusOnly = typeof statusOnly !== 'undefined' ? statusOnly : false;\n\t\tif (!statusOnly) {\n\t\t\tset({ generating:true });\n\t\t}\n\n\t\tlet data = {};\n\t\tdata.startDate = startDate;\n\t\tdata.endDate = endDate;\n\t\tdata.statusOnly = statusOnly;\n\t\tconst {progress, exportLink, noData} = await cmplz_api.doAction('export_records_of_consent', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tlet generating = false;\n\t\tif (progress<100 ){\n\t\t\tgenerating = true;\n\t\t}\n\t\tset({progress:progress, exportLink:exportLink, generating:generating,noData:noData});\n\n\t},\n}));\n\nexport default useRecordsOfConsentData;\n"],"names":["create","cmplz_api","useRecordsOfConsentData","set","get","recordsLoaded","fetching","generating","progress","records","exportLink","downloadUrl","regions","fields","noData","deleteRecords","ids","filter","record","includes","id","state","data","doAction","then","response","catch","error","console","fetchData","download_url","startExport","fetchExportRecordsOfConsentProgress","statusOnly","startDate","endDate"],"sourceRoot":""}