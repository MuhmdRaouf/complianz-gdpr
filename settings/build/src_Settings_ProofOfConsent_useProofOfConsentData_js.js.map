{"version":3,"file":"src_Settings_ProofOfConsent_useProofOfConsentData_js.js","mappings":";;;;;;;;;;;;;;;AAA+B;AACc;AAC7C,MAAME,qBAAqB,GAAGF,+CAAM,CAAC,CAAEG,GAAG,EAAEC,GAAG,MAAO;EACrDC,eAAe,EAAE,KAAK;EACtBC,QAAQ,EAAC,KAAK;EACdC,UAAU,EAAC,KAAK;EAChBC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,EAAE;EACVC,eAAe,EAAE,MAAOC,GAAG,IAAK;IAC/B;IACA,IAAID,eAAe,GAAGR,GAAG,CAAC,CAAC,CAACI,SAAS,CAACM,MAAM,CAACC,QAAQ,IAAIF,GAAG,CAACG,QAAQ,CAACD,QAAQ,CAACE,EAAE,CAAC,CAAC;IACnF;IACAd,GAAG,CAAEe,KAAK,KAAM;MACfV,SAAS,EAAEU,KAAK,CAACV,SAAS,CAACM,MAAM,CAACC,QAAQ,IAAI,CAACF,GAAG,CAACG,QAAQ,CAACD,QAAQ,CAACE,EAAE,CAAC;IACzE,CAAC,CAAC,CAAC;IACH,IAAIE,IAAI,GAAG,CAAC,CAAC;IACbA,IAAI,CAACX,SAAS,GAAGI,eAAe;IAChC,MAAMX,gDAAkB,CAAC,mCAAmC,EAAEkB,IAAI,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MACtF,OAAOA,QAAQ;IAChB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACrB,CAAC,CAAC;EAEH,CAAC;EACDE,sBAAsB,EAAE,MAAAA,CAAA,KAAY;IACnCvB,GAAG,CAAC;MAACI,UAAU,EAAC;IAAI,CAAC,CAAC;IACtB,IAAIY,IAAI,GAAG,CAAC,CAAC;IACb,MAAMlB,gDAAkB,CAAC,2BAA2B,EAAEkB,IAAI,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAE9E,OAAOA,QAAQ;IAChB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACrB,CAAC,CAAC;IACF,MAAMpB,GAAG,CAAC,CAAC,CAACuB,SAAS,CAAC,CAAC;IACvBxB,GAAG,CAAC;MAACI,UAAU,EAAC;IAAK,CAAC,CAAC;EAExB,CAAC;EACDoB,SAAS,EAAE,MAAAA,CAAA,KAAa;IACvB,IAAIvB,GAAG,CAAC,CAAC,CAACE,QAAQ,EAAE;IACpBH,GAAG,CAAC;MAACG,QAAQ,EAAC;IAAI,CAAC,CAAC;IACpB,IAAIa,IAAI,GAAG,CAAC,CAAC;IACb,MAAM;MAAEX,SAAS;MAACE,OAAO;MAAEkB;IAAY,CAAC,GAAG,MAAM3B,gDAAkB,CAAC,gCAAgC,EAAEkB,IAAI,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAC9H,OAAOA,QAAQ;IAChB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MACnBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACrB,CAAC,CAAC;IACFrB,GAAG,CAAEe,KAAK,KAAM;MACfb,eAAe,EAAE,IAAI;MACrBG,SAAS,EAAEA,SAAS;MACpBE,OAAO,EAAEA,OAAO;MAChBD,WAAW,EAAEmB,YAAY;MACzBtB,QAAQ,EAAC;IACV,CAAC,CAAC,CAAC;EACJ;AACD,CAAC,CAAC,CAAC;AAEH,iEAAeJ,qBAAqB","sources":["webpack://complianz-gdpr/./src/Settings/ProofOfConsent/useProofOfConsentData.js"],"sourcesContent":["import {create} from 'zustand';\nimport * as cmplz_api from \"../../utils/api\";\nconst useProofOfConsentData = create(( set, get ) => ({\n\tdocumentsLoaded: false,\n\tfetching:false,\n\tgenerating:false,\n\tdocuments: [],\n\tdownloadUrl: '',\n\tregions: [],\n\tfields: [],\n\tdeleteDocuments: async (ids) => {\n\t\t//get array of documents to delete\n\t\tlet deleteDocuments = get().documents.filter(document => ids.includes(document.id));\n\t\t//remove the ids from the documents array\n\t\tset((state) => ({\n\t\t\tdocuments: state.documents.filter(document => !ids.includes(document.id)),\n\t\t}));\n\t\tlet data = {};\n\t\tdata.documents = deleteDocuments;\n\t\tawait cmplz_api.doAction('delete_proof_of_consent_documents', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\n\t},\n\tgenerateProofOfConsent: async () => {\n\t\tset({generating:true});\n\t\tlet data = {};\n\t\tawait cmplz_api.doAction('generate_proof_of_consent', data).then((response) => {\n\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tawait get().fetchData();\n\t\tset({generating:false});\n\n\t},\n\tfetchData: async ( ) => {\n\t\tif (get().fetching) return;\n\t\tset({fetching:true});\n\t\tlet data = {}\n\t\tconst { documents,regions, download_url} = await cmplz_api.doAction('get_proof_of_consent_documents', data).then((response) => {\n\t\t\treturn response;\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t});\n\t\tset((state) => ({\n\t\t\tdocumentsLoaded: true,\n\t\t\tdocuments: documents,\n\t\t\tregions: regions,\n\t\t\tdownloadUrl: download_url,\n\t\t\tfetching:false,\n\t\t}));\n\t},\n}));\n\nexport default useProofOfConsentData;\n"],"names":["create","cmplz_api","useProofOfConsentData","set","get","documentsLoaded","fetching","generating","documents","downloadUrl","regions","fields","deleteDocuments","ids","filter","document","includes","id","state","data","doAction","then","response","catch","error","console","generateProofOfConsent","fetchData","download_url"],"sourceRoot":""}