{"version":3,"file":"src_Dashboard_Tools_ToolsData_js.js","mappings":";;;;;;;;;;;;;;;AAA+B;AACc;AAE7C,MAAME,QAAQ,GAAGF,+CAAM,CAAC,CAAEG,GAAG,EAAEC,GAAG,MAAO;EACxCC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACzB,MAAM;MAACC,SAAS;MAAEC,0BAA0B;MAAEC,qBAAqB;MAACC;IAAiB,CAAC,GAAG,MAAMR,gDAAkB,CAAC,sBAAsB,CAAC,CAACU,IAAI,CAAIC,QAAQ,IAAM;MAE/J,OAAOA,QAAQ;IAChB,CAAC,CAAC;IACFT,GAAG,CAACU,KAAK,KAAK;MAAEP,SAAS,EAACA,SAAS;MAAEC,0BAA0B,EAACA,0BAA0B;MAAEC,qBAAqB,EAACA,qBAAqB;MAACC,iBAAiB,EAACA;IAAiB,CAAC,CAAC,CAAC;EAC/K;AAED,CAAC,CAAC,CAAC;AAEH,iEAAeP,QAAQ","sources":["webpack://complianz-gdpr/./src/Dashboard/Tools/ToolsData.js"],"sourcesContent":["import {create} from 'zustand';\nimport * as cmplz_api from \"../../utils/api\";\n\nconst useTools = create(( set, get ) => ({\n\tgetDocuments: async () => {\n\t\tconst {documents, processingAgreementOptions, proofOfConsentOptions,dataBreachOptions} = await cmplz_api.doAction('documents_block_data').then( ( response ) => {\n\n\t\t\treturn response;\n\t\t});\n\t\tset(state => ({ documents:documents, processingAgreementOptions:processingAgreementOptions, proofOfConsentOptions:proofOfConsentOptions,dataBreachOptions:dataBreachOptions}));\n\t},\n\n}));\n\nexport default useTools;\n\n"],"names":["create","cmplz_api","useTools","set","get","getDocuments","documents","processingAgreementOptions","proofOfConsentOptions","dataBreachOptions","doAction","then","response","state"],"sourceRoot":""}